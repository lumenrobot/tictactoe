#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFSocmedProcessing.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LumenChatterBot3")]
	public partial class LumenChatterBotDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEventLog(EventLog instance);
    partial void UpdateEventLog(EventLog instance);
    partial void DeleteEventLog(EventLog instance);
    partial void InsertGeneral_Variable(General_Variable instance);
    partial void UpdateGeneral_Variable(General_Variable instance);
    partial void DeleteGeneral_Variable(General_Variable instance);
    partial void InsertInbox(Inbox instance);
    partial void UpdateInbox(Inbox instance);
    partial void DeleteInbox(Inbox instance);
    partial void InsertInbox_Facebook(Inbox_Facebook instance);
    partial void UpdateInbox_Facebook(Inbox_Facebook instance);
    partial void DeleteInbox_Facebook(Inbox_Facebook instance);
    partial void InsertMaster_FacebookFriend(Master_FacebookFriend instance);
    partial void UpdateMaster_FacebookFriend(Master_FacebookFriend instance);
    partial void DeleteMaster_FacebookFriend(Master_FacebookFriend instance);
    partial void InsertMaster_FileType(Master_FileType instance);
    partial void UpdateMaster_FileType(Master_FileType instance);
    partial void DeleteMaster_FileType(Master_FileType instance);
    partial void InsertMaster_Function(Master_Function instance);
    partial void UpdateMaster_Function(Master_Function instance);
    partial void DeleteMaster_Function(Master_Function instance);
    partial void InsertMaster_FunctionParameter(Master_FunctionParameter instance);
    partial void UpdateMaster_FunctionParameter(Master_FunctionParameter instance);
    partial void DeleteMaster_FunctionParameter(Master_FunctionParameter instance);
    partial void InsertMaster_KeyReply(Master_KeyReply instance);
    partial void UpdateMaster_KeyReply(Master_KeyReply instance);
    partial void DeleteMaster_KeyReply(Master_KeyReply instance);
    partial void InsertMaster_KeyStatus(Master_KeyStatus instance);
    partial void UpdateMaster_KeyStatus(Master_KeyStatus instance);
    partial void DeleteMaster_KeyStatus(Master_KeyStatus instance);
    partial void InsertMaster_LogType(Master_LogType instance);
    partial void UpdateMaster_LogType(Master_LogType instance);
    partial void DeleteMaster_LogType(Master_LogType instance);
    partial void InsertMaster_MessageType(Master_MessageType instance);
    partial void UpdateMaster_MessageType(Master_MessageType instance);
    partial void DeleteMaster_MessageType(Master_MessageType instance);
    partial void InsertMaster_ReplyDetail(Master_ReplyDetail instance);
    partial void UpdateMaster_ReplyDetail(Master_ReplyDetail instance);
    partial void DeleteMaster_ReplyDetail(Master_ReplyDetail instance);
    partial void InsertMaster_Scheduler(Master_Scheduler instance);
    partial void UpdateMaster_Scheduler(Master_Scheduler instance);
    partial void DeleteMaster_Scheduler(Master_Scheduler instance);
    partial void InsertMaster_SchedulerDetail(Master_SchedulerDetail instance);
    partial void UpdateMaster_SchedulerDetail(Master_SchedulerDetail instance);
    partial void DeleteMaster_SchedulerDetail(Master_SchedulerDetail instance);
    partial void InsertMaster_StatusDetail(Master_StatusDetail instance);
    partial void UpdateMaster_StatusDetail(Master_StatusDetail instance);
    partial void DeleteMaster_StatusDetail(Master_StatusDetail instance);
    partial void InsertSent_Attachment(Sent_Attachment instance);
    partial void UpdateSent_Attachment(Sent_Attachment instance);
    partial void DeleteSent_Attachment(Sent_Attachment instance);
    partial void InsertSent_Facebook(Sent_Facebook instance);
    partial void UpdateSent_Facebook(Sent_Facebook instance);
    partial void DeleteSent_Facebook(Sent_Facebook instance);
    partial void InsertSent(Sent instance);
    partial void UpdateSent(Sent instance);
    partial void DeleteSent(Sent instance);
    #endregion
		
		public LumenChatterBotDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LumenChatterBot3ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EventLog> EventLogs
		{
			get
			{
				return this.GetTable<EventLog>();
			}
		}
		
		public System.Data.Linq.Table<Sent_Facebook_ReplyCoversation> Sent_Facebook_ReplyCoversations
		{
			get
			{
				return this.GetTable<Sent_Facebook_ReplyCoversation>();
			}
		}
		
		public System.Data.Linq.Table<General_Variable> General_Variables
		{
			get
			{
				return this.GetTable<General_Variable>();
			}
		}
		
		public System.Data.Linq.Table<Inbox> Inboxes
		{
			get
			{
				return this.GetTable<Inbox>();
			}
		}
		
		public System.Data.Linq.Table<Inbox_Facebook> Inbox_Facebooks
		{
			get
			{
				return this.GetTable<Inbox_Facebook>();
			}
		}
		
		public System.Data.Linq.Table<Master_FacebookFriend> Master_FacebookFriends
		{
			get
			{
				return this.GetTable<Master_FacebookFriend>();
			}
		}
		
		public System.Data.Linq.Table<Master_FileType> Master_FileTypes
		{
			get
			{
				return this.GetTable<Master_FileType>();
			}
		}
		
		public System.Data.Linq.Table<Master_Function> Master_Functions
		{
			get
			{
				return this.GetTable<Master_Function>();
			}
		}
		
		public System.Data.Linq.Table<Master_FunctionParameter> Master_FunctionParameters
		{
			get
			{
				return this.GetTable<Master_FunctionParameter>();
			}
		}
		
		public System.Data.Linq.Table<Master_KeyReply> Master_KeyReplies
		{
			get
			{
				return this.GetTable<Master_KeyReply>();
			}
		}
		
		public System.Data.Linq.Table<Master_KeyStatus> Master_KeyStatus
		{
			get
			{
				return this.GetTable<Master_KeyStatus>();
			}
		}
		
		public System.Data.Linq.Table<Master_LogType> Master_LogTypes
		{
			get
			{
				return this.GetTable<Master_LogType>();
			}
		}
		
		public System.Data.Linq.Table<Master_MessageType> Master_MessageTypes
		{
			get
			{
				return this.GetTable<Master_MessageType>();
			}
		}
		
		public System.Data.Linq.Table<Master_ReplyDetail> Master_ReplyDetails
		{
			get
			{
				return this.GetTable<Master_ReplyDetail>();
			}
		}
		
		public System.Data.Linq.Table<Master_Scheduler> Master_Schedulers
		{
			get
			{
				return this.GetTable<Master_Scheduler>();
			}
		}
		
		public System.Data.Linq.Table<Master_SchedulerDetail> Master_SchedulerDetails
		{
			get
			{
				return this.GetTable<Master_SchedulerDetail>();
			}
		}
		
		public System.Data.Linq.Table<Master_StatusDetail> Master_StatusDetails
		{
			get
			{
				return this.GetTable<Master_StatusDetail>();
			}
		}
		
		public System.Data.Linq.Table<Sent_Attachment> Sent_Attachments
		{
			get
			{
				return this.GetTable<Sent_Attachment>();
			}
		}
		
		public System.Data.Linq.Table<View_Inbox_Facebook> View_Inbox_Facebooks
		{
			get
			{
				return this.GetTable<View_Inbox_Facebook>();
			}
		}
		
		public System.Data.Linq.Table<View_Master_KeyReply> View_Master_KeyReplies
		{
			get
			{
				return this.GetTable<View_Master_KeyReply>();
			}
		}
		
		public System.Data.Linq.Table<View_Master_KeyStatus> View_Master_KeyStatus
		{
			get
			{
				return this.GetTable<View_Master_KeyStatus>();
			}
		}
		
		public System.Data.Linq.Table<View_ScheduleDetail> View_ScheduleDetails
		{
			get
			{
				return this.GetTable<View_ScheduleDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_ScheduleDetailWithFuncDescription> View_ScheduleDetailWithFuncDescriptions
		{
			get
			{
				return this.GetTable<View_ScheduleDetailWithFuncDescription>();
			}
		}
		
		public System.Data.Linq.Table<View_Sent_Facebook> View_Sent_Facebooks
		{
			get
			{
				return this.GetTable<View_Sent_Facebook>();
			}
		}
		
		public System.Data.Linq.Table<Sent_Facebook> Sent_Facebooks
		{
			get
			{
				return this.GetTable<Sent_Facebook>();
			}
		}
		
		public System.Data.Linq.Table<Sent> Sents
		{
			get
			{
				return this.GetTable<Sent>();
			}
		}
		
		public System.Data.Linq.Table<View_Sent_Attachment> View_Sent_Attachments
		{
			get
			{
				return this.GetTable<View_Sent_Attachment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLog")]
	public partial class EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LogType;
		
		private string _Message;
		
		private System.Nullable<bool> _IsError;
		
		private EntityRef<Master_LogType> _Master_LogType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsErrorChanging(System.Nullable<bool> value);
    partial void OnIsErrorChanged();
    #endregion
		
		public EventLog()
		{
			this._Master_LogType = default(EntityRef<Master_LogType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="VarChar(300)")]
		public string LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					if (this._Master_LogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsError", DbType="Bit")]
		public System.Nullable<bool> IsError
		{
			get
			{
				return this._IsError;
			}
			set
			{
				if ((this._IsError != value))
				{
					this.OnIsErrorChanging(value);
					this.SendPropertyChanging();
					this._IsError = value;
					this.SendPropertyChanged("IsError");
					this.OnIsErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_LogType_EventLog", Storage="_Master_LogType", ThisKey="LogType", OtherKey="TypeName", IsForeignKey=true, DeleteRule="CASCADE")]
		public Master_LogType Master_LogType
		{
			get
			{
				return this._Master_LogType.Entity;
			}
			set
			{
				Master_LogType previousValue = this._Master_LogType.Entity;
				if (((previousValue != value) 
							|| (this._Master_LogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_LogType.Entity = null;
						previousValue.EventLogs.Remove(this);
					}
					this._Master_LogType.Entity = value;
					if ((value != null))
					{
						value.EventLogs.Add(this);
						this._LogType = value.TypeName;
					}
					else
					{
						this._LogType = default(string);
					}
					this.SendPropertyChanged("Master_LogType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sent_Facebook_ReplyCoversation")]
	public partial class Sent_Facebook_ReplyCoversation
	{
		
		private System.Nullable<int> _Id;
		
		private System.Nullable<int> _IdInboxFb;
		
		public Sent_Facebook_ReplyCoversation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInboxFb", DbType="Int")]
		public System.Nullable<int> IdInboxFb
		{
			get
			{
				return this._IdInboxFb;
			}
			set
			{
				if ((this._IdInboxFb != value))
				{
					this._IdInboxFb = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.General_Variable")]
	public partial class General_Variable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VariableName;
		
		private string _Value;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariableNameChanging(string value);
    partial void OnVariableNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public General_Variable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableName", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VariableName
		{
			get
			{
				return this._VariableName;
			}
			set
			{
				if ((this._VariableName != value))
				{
					this.OnVariableNameChanging(value);
					this.SendPropertyChanging();
					this._VariableName = value;
					this.SendPropertyChanged("VariableName");
					this.OnVariableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(1000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inbox")]
	public partial class Inbox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private string _FromName;
		
		private string _FromAddress;
		
		private string _CcName;
		
		private string _CcAddress;
		
		private string _ToName;
		
		private string _ToAddress;
		
		private string _Subject;
		
		private string _BodyTextPlain;
		
		private string _BodyHtml;
		
		private string _BodyComposite;
		
		private System.Nullable<bool> _IsAttachment;
		
		private System.Nullable<bool> _IsFiltered;
		
		private string _ReplyToName;
		
		private string _ReplyToAddress;
		
		private EntityRef<Inbox_Facebook> _Inbox_Facebook;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedDateChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnFromAddressChanging(string value);
    partial void OnFromAddressChanged();
    partial void OnCcNameChanging(string value);
    partial void OnCcNameChanged();
    partial void OnCcAddressChanging(string value);
    partial void OnCcAddressChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    partial void OnToAddressChanging(string value);
    partial void OnToAddressChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyTextPlainChanging(string value);
    partial void OnBodyTextPlainChanged();
    partial void OnBodyHtmlChanging(string value);
    partial void OnBodyHtmlChanged();
    partial void OnBodyCompositeChanging(string value);
    partial void OnBodyCompositeChanged();
    partial void OnIsAttachmentChanging(System.Nullable<bool> value);
    partial void OnIsAttachmentChanged();
    partial void OnIsFilteredChanging(System.Nullable<bool> value);
    partial void OnIsFilteredChanged();
    partial void OnReplyToNameChanging(string value);
    partial void OnReplyToNameChanged();
    partial void OnReplyToAddressChanging(string value);
    partial void OnReplyToAddressChanged();
    #endregion
		
		public Inbox()
		{
			this._Inbox_Facebook = default(EntityRef<Inbox_Facebook>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="VarChar(500)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddress", DbType="VarChar(500)")]
		public string FromAddress
		{
			get
			{
				return this._FromAddress;
			}
			set
			{
				if ((this._FromAddress != value))
				{
					this.OnFromAddressChanging(value);
					this.SendPropertyChanging();
					this._FromAddress = value;
					this.SendPropertyChanged("FromAddress");
					this.OnFromAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CcName", DbType="VarChar(500)")]
		public string CcName
		{
			get
			{
				return this._CcName;
			}
			set
			{
				if ((this._CcName != value))
				{
					this.OnCcNameChanging(value);
					this.SendPropertyChanging();
					this._CcName = value;
					this.SendPropertyChanged("CcName");
					this.OnCcNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CcAddress", DbType="VarChar(500)")]
		public string CcAddress
		{
			get
			{
				return this._CcAddress;
			}
			set
			{
				if ((this._CcAddress != value))
				{
					this.OnCcAddressChanging(value);
					this.SendPropertyChanging();
					this._CcAddress = value;
					this.SendPropertyChanged("CcAddress");
					this.OnCcAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="VarChar(500)")]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this.OnToNameChanging(value);
					this.SendPropertyChanging();
					this._ToName = value;
					this.SendPropertyChanged("ToName");
					this.OnToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="VarChar(500)")]
		public string ToAddress
		{
			get
			{
				return this._ToAddress;
			}
			set
			{
				if ((this._ToAddress != value))
				{
					this.OnToAddressChanging(value);
					this.SendPropertyChanging();
					this._ToAddress = value;
					this.SendPropertyChanged("ToAddress");
					this.OnToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyTextPlain", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyTextPlain
		{
			get
			{
				return this._BodyTextPlain;
			}
			set
			{
				if ((this._BodyTextPlain != value))
				{
					this.OnBodyTextPlainChanging(value);
					this.SendPropertyChanging();
					this._BodyTextPlain = value;
					this.SendPropertyChanged("BodyTextPlain");
					this.OnBodyTextPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyHtml", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyHtml
		{
			get
			{
				return this._BodyHtml;
			}
			set
			{
				if ((this._BodyHtml != value))
				{
					this.OnBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._BodyHtml = value;
					this.SendPropertyChanged("BodyHtml");
					this.OnBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyComposite", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyComposite
		{
			get
			{
				return this._BodyComposite;
			}
			set
			{
				if ((this._BodyComposite != value))
				{
					this.OnBodyCompositeChanging(value);
					this.SendPropertyChanging();
					this._BodyComposite = value;
					this.SendPropertyChanged("BodyComposite");
					this.OnBodyCompositeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttachment", DbType="Bit")]
		public System.Nullable<bool> IsAttachment
		{
			get
			{
				return this._IsAttachment;
			}
			set
			{
				if ((this._IsAttachment != value))
				{
					this.OnIsAttachmentChanging(value);
					this.SendPropertyChanging();
					this._IsAttachment = value;
					this.SendPropertyChanged("IsAttachment");
					this.OnIsAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFiltered", DbType="Bit")]
		public System.Nullable<bool> IsFiltered
		{
			get
			{
				return this._IsFiltered;
			}
			set
			{
				if ((this._IsFiltered != value))
				{
					this.OnIsFilteredChanging(value);
					this.SendPropertyChanging();
					this._IsFiltered = value;
					this.SendPropertyChanged("IsFiltered");
					this.OnIsFilteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyToName", DbType="VarChar(500)")]
		public string ReplyToName
		{
			get
			{
				return this._ReplyToName;
			}
			set
			{
				if ((this._ReplyToName != value))
				{
					this.OnReplyToNameChanging(value);
					this.SendPropertyChanging();
					this._ReplyToName = value;
					this.SendPropertyChanged("ReplyToName");
					this.OnReplyToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyToAddress", DbType="VarChar(500)")]
		public string ReplyToAddress
		{
			get
			{
				return this._ReplyToAddress;
			}
			set
			{
				if ((this._ReplyToAddress != value))
				{
					this.OnReplyToAddressChanging(value);
					this.SendPropertyChanging();
					this._ReplyToAddress = value;
					this.SendPropertyChanged("ReplyToAddress");
					this.OnReplyToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inbox_Inbox_Facebook", Storage="_Inbox_Facebook", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Inbox_Facebook Inbox_Facebook
		{
			get
			{
				return this._Inbox_Facebook.Entity;
			}
			set
			{
				Inbox_Facebook previousValue = this._Inbox_Facebook.Entity;
				if (((previousValue != value) 
							|| (this._Inbox_Facebook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inbox_Facebook.Entity = null;
						previousValue.Inbox = null;
					}
					this._Inbox_Facebook.Entity = value;
					if ((value != null))
					{
						value.Inbox = this;
					}
					this.SendPropertyChanged("Inbox_Facebook");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inbox_Facebook")]
	public partial class Inbox_Facebook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdMessageType;
		
		private string _Message;
		
		private string _FromNameFb;
		
		private string _FromAddressFb;
		
		private System.Nullable<bool> _IsAnalized;
		
		private EntityRef<Inbox> _Inbox;
		
		private EntityRef<Master_MessageType> _Master_MessageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMessageTypeChanging(System.Nullable<int> value);
    partial void OnIdMessageTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnFromNameFbChanging(string value);
    partial void OnFromNameFbChanged();
    partial void OnFromAddressFbChanging(string value);
    partial void OnFromAddressFbChanged();
    partial void OnIsAnalizedChanging(System.Nullable<bool> value);
    partial void OnIsAnalizedChanged();
    #endregion
		
		public Inbox_Facebook()
		{
			this._Inbox = default(EntityRef<Inbox>);
			this._Master_MessageType = default(EntityRef<Master_MessageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Inbox.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMessageType", DbType="Int")]
		public System.Nullable<int> IdMessageType
		{
			get
			{
				return this._IdMessageType;
			}
			set
			{
				if ((this._IdMessageType != value))
				{
					if (this._Master_MessageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._IdMessageType = value;
					this.SendPropertyChanged("IdMessageType");
					this.OnIdMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNameFb", DbType="VarChar(500)")]
		public string FromNameFb
		{
			get
			{
				return this._FromNameFb;
			}
			set
			{
				if ((this._FromNameFb != value))
				{
					this.OnFromNameFbChanging(value);
					this.SendPropertyChanging();
					this._FromNameFb = value;
					this.SendPropertyChanged("FromNameFb");
					this.OnFromNameFbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddressFb", DbType="VarChar(500)")]
		public string FromAddressFb
		{
			get
			{
				return this._FromAddressFb;
			}
			set
			{
				if ((this._FromAddressFb != value))
				{
					this.OnFromAddressFbChanging(value);
					this.SendPropertyChanging();
					this._FromAddressFb = value;
					this.SendPropertyChanged("FromAddressFb");
					this.OnFromAddressFbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnalized", DbType="Bit")]
		public System.Nullable<bool> IsAnalized
		{
			get
			{
				return this._IsAnalized;
			}
			set
			{
				if ((this._IsAnalized != value))
				{
					this.OnIsAnalizedChanging(value);
					this.SendPropertyChanging();
					this._IsAnalized = value;
					this.SendPropertyChanged("IsAnalized");
					this.OnIsAnalizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inbox_Inbox_Facebook", Storage="_Inbox", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Inbox Inbox
		{
			get
			{
				return this._Inbox.Entity;
			}
			set
			{
				Inbox previousValue = this._Inbox.Entity;
				if (((previousValue != value) 
							|| (this._Inbox.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inbox.Entity = null;
						previousValue.Inbox_Facebook = null;
					}
					this._Inbox.Entity = value;
					if ((value != null))
					{
						value.Inbox_Facebook = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Inbox");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_MessageType_Inbox_Facebook", Storage="_Master_MessageType", ThisKey="IdMessageType", OtherKey="Id", IsForeignKey=true)]
		public Master_MessageType Master_MessageType
		{
			get
			{
				return this._Master_MessageType.Entity;
			}
			set
			{
				Master_MessageType previousValue = this._Master_MessageType.Entity;
				if (((previousValue != value) 
							|| (this._Master_MessageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_MessageType.Entity = null;
						previousValue.Inbox_Facebooks.Remove(this);
					}
					this._Master_MessageType.Entity = value;
					if ((value != null))
					{
						value.Inbox_Facebooks.Add(this);
						this._IdMessageType = value.Id;
					}
					else
					{
						this._IdMessageType = default(Nullable<int>);
					}
					this.SendPropertyChanged("Master_MessageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_FacebookFriend")]
	public partial class Master_FacebookFriend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FbName;
		
		private string _FbEmail;
		
		private string _Location;
		
		private string _Hometown;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _FbId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFbNameChanging(string value);
    partial void OnFbNameChanged();
    partial void OnFbEmailChanging(string value);
    partial void OnFbEmailChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnHometownChanging(string value);
    partial void OnHometownChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnFbIdChanging(string value);
    partial void OnFbIdChanged();
    #endregion
		
		public Master_FacebookFriend()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FbName", DbType="VarChar(500)")]
		public string FbName
		{
			get
			{
				return this._FbName;
			}
			set
			{
				if ((this._FbName != value))
				{
					this.OnFbNameChanging(value);
					this.SendPropertyChanging();
					this._FbName = value;
					this.SendPropertyChanged("FbName");
					this.OnFbNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FbEmail", DbType="VarChar(500)")]
		public string FbEmail
		{
			get
			{
				return this._FbEmail;
			}
			set
			{
				if ((this._FbEmail != value))
				{
					this.OnFbEmailChanging(value);
					this.SendPropertyChanging();
					this._FbEmail = value;
					this.SendPropertyChanged("FbEmail");
					this.OnFbEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(500)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometown", DbType="VarChar(500)")]
		public string Hometown
		{
			get
			{
				return this._Hometown;
			}
			set
			{
				if ((this._Hometown != value))
				{
					this.OnHometownChanging(value);
					this.SendPropertyChanging();
					this._Hometown = value;
					this.SendPropertyChanged("Hometown");
					this.OnHometownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FbId", DbType="VarChar(500)")]
		public string FbId
		{
			get
			{
				return this._FbId;
			}
			set
			{
				if ((this._FbId != value))
				{
					this.OnFbIdChanging(value);
					this.SendPropertyChanging();
					this._FbId = value;
					this.SendPropertyChanged("FbId");
					this.OnFbIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_FileType")]
	public partial class Master_FileType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private System.Data.Linq.Binary _Description;
		
		private EntitySet<Sent_Attachment> _Sent_Attachments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(System.Data.Linq.Binary value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Master_FileType()
		{
			this._Sent_Attachments = new EntitySet<Sent_Attachment>(new Action<Sent_Attachment>(this.attach_Sent_Attachments), new Action<Sent_Attachment>(this.detach_Sent_Attachments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarBinary(500)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_FileType_Sent_Attachment", Storage="_Sent_Attachments", ThisKey="Type", OtherKey="FileType")]
		public EntitySet<Sent_Attachment> Sent_Attachments
		{
			get
			{
				return this._Sent_Attachments;
			}
			set
			{
				this._Sent_Attachments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sent_Attachments(Sent_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Master_FileType = this;
		}
		
		private void detach_Sent_Attachments(Sent_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Master_FileType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_Function")]
	public partial class Master_Function : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<bool> _IsParameter;
		
		private EntitySet<Master_FunctionParameter> _Master_FunctionParameters;
		
		private EntitySet<Master_SchedulerDetail> _Master_SchedulerDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsParameterChanging(System.Nullable<bool> value);
    partial void OnIsParameterChanged();
    #endregion
		
		public Master_Function()
		{
			this._Master_FunctionParameters = new EntitySet<Master_FunctionParameter>(new Action<Master_FunctionParameter>(this.attach_Master_FunctionParameters), new Action<Master_FunctionParameter>(this.detach_Master_FunctionParameters));
			this._Master_SchedulerDetails = new EntitySet<Master_SchedulerDetail>(new Action<Master_SchedulerDetail>(this.attach_Master_SchedulerDetails), new Action<Master_SchedulerDetail>(this.detach_Master_SchedulerDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParameter", DbType="Bit")]
		public System.Nullable<bool> IsParameter
		{
			get
			{
				return this._IsParameter;
			}
			set
			{
				if ((this._IsParameter != value))
				{
					this.OnIsParameterChanging(value);
					this.SendPropertyChanging();
					this._IsParameter = value;
					this.SendPropertyChanged("IsParameter");
					this.OnIsParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Function_Master_FunctionParameter", Storage="_Master_FunctionParameters", ThisKey="Id", OtherKey="IdMFunction")]
		public EntitySet<Master_FunctionParameter> Master_FunctionParameters
		{
			get
			{
				return this._Master_FunctionParameters;
			}
			set
			{
				this._Master_FunctionParameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Function_Master_SchedulerDetail", Storage="_Master_SchedulerDetails", ThisKey="Id", OtherKey="IdFunctionToCall")]
		public EntitySet<Master_SchedulerDetail> Master_SchedulerDetails
		{
			get
			{
				return this._Master_SchedulerDetails;
			}
			set
			{
				this._Master_SchedulerDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Master_FunctionParameters(Master_FunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Master_Function = this;
		}
		
		private void detach_Master_FunctionParameters(Master_FunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Master_Function = null;
		}
		
		private void attach_Master_SchedulerDetails(Master_SchedulerDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_Function = this;
		}
		
		private void detach_Master_SchedulerDetails(Master_SchedulerDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_Function = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_FunctionParameter")]
	public partial class Master_FunctionParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdMFunction;
		
		private string _ParameterValue;
		
		private byte _ParameterSequence;
		
		private EntityRef<Master_Function> _Master_Function;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMFunctionChanging(System.Nullable<int> value);
    partial void OnIdMFunctionChanged();
    partial void OnParameterValueChanging(string value);
    partial void OnParameterValueChanged();
    partial void OnParameterSequenceChanging(byte value);
    partial void OnParameterSequenceChanged();
    #endregion
		
		public Master_FunctionParameter()
		{
			this._Master_Function = default(EntityRef<Master_Function>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMFunction", DbType="Int")]
		public System.Nullable<int> IdMFunction
		{
			get
			{
				return this._IdMFunction;
			}
			set
			{
				if ((this._IdMFunction != value))
				{
					if (this._Master_Function.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMFunctionChanging(value);
					this.SendPropertyChanging();
					this._IdMFunction = value;
					this.SendPropertyChanged("IdMFunction");
					this.OnIdMFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterValue", DbType="VarChar(50)")]
		public string ParameterValue
		{
			get
			{
				return this._ParameterValue;
			}
			set
			{
				if ((this._ParameterValue != value))
				{
					this.OnParameterValueChanging(value);
					this.SendPropertyChanging();
					this._ParameterValue = value;
					this.SendPropertyChanged("ParameterValue");
					this.OnParameterValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterSequence", DbType="TinyInt NOT NULL")]
		public byte ParameterSequence
		{
			get
			{
				return this._ParameterSequence;
			}
			set
			{
				if ((this._ParameterSequence != value))
				{
					this.OnParameterSequenceChanging(value);
					this.SendPropertyChanging();
					this._ParameterSequence = value;
					this.SendPropertyChanged("ParameterSequence");
					this.OnParameterSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Function_Master_FunctionParameter", Storage="_Master_Function", ThisKey="IdMFunction", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Master_Function Master_Function
		{
			get
			{
				return this._Master_Function.Entity;
			}
			set
			{
				Master_Function previousValue = this._Master_Function.Entity;
				if (((previousValue != value) 
							|| (this._Master_Function.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_Function.Entity = null;
						previousValue.Master_FunctionParameters.Remove(this);
					}
					this._Master_Function.Entity = value;
					if ((value != null))
					{
						value.Master_FunctionParameters.Add(this);
						this._IdMFunction = value.Id;
					}
					else
					{
						this._IdMFunction = default(Nullable<int>);
					}
					this.SendPropertyChanged("Master_Function");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_KeyReply")]
	public partial class Master_KeyReply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KeyWord;
		
		private EntitySet<Master_ReplyDetail> _Master_ReplyDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeyWordChanging(string value);
    partial void OnKeyWordChanged();
    #endregion
		
		public Master_KeyReply()
		{
			this._Master_ReplyDetails = new EntitySet<Master_ReplyDetail>(new Action<Master_ReplyDetail>(this.attach_Master_ReplyDetails), new Action<Master_ReplyDetail>(this.detach_Master_ReplyDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWord", DbType="VarChar(500)")]
		public string KeyWord
		{
			get
			{
				return this._KeyWord;
			}
			set
			{
				if ((this._KeyWord != value))
				{
					this.OnKeyWordChanging(value);
					this.SendPropertyChanging();
					this._KeyWord = value;
					this.SendPropertyChanged("KeyWord");
					this.OnKeyWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_KeyReply_Master_ReplyDetail", Storage="_Master_ReplyDetails", ThisKey="Id", OtherKey="IdMKeyReply")]
		public EntitySet<Master_ReplyDetail> Master_ReplyDetails
		{
			get
			{
				return this._Master_ReplyDetails;
			}
			set
			{
				this._Master_ReplyDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Master_ReplyDetails(Master_ReplyDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_KeyReply = this;
		}
		
		private void detach_Master_ReplyDetails(Master_ReplyDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_KeyReply = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_KeyStatus")]
	public partial class Master_KeyStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KeyWord;
		
		private EntitySet<Master_StatusDetail> _Master_StatusDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeyWordChanging(string value);
    partial void OnKeyWordChanged();
    #endregion
		
		public Master_KeyStatus()
		{
			this._Master_StatusDetails = new EntitySet<Master_StatusDetail>(new Action<Master_StatusDetail>(this.attach_Master_StatusDetails), new Action<Master_StatusDetail>(this.detach_Master_StatusDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWord", DbType="VarChar(500)")]
		public string KeyWord
		{
			get
			{
				return this._KeyWord;
			}
			set
			{
				if ((this._KeyWord != value))
				{
					this.OnKeyWordChanging(value);
					this.SendPropertyChanging();
					this._KeyWord = value;
					this.SendPropertyChanged("KeyWord");
					this.OnKeyWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_KeyStatus_Master_StatusDetail", Storage="_Master_StatusDetails", ThisKey="Id", OtherKey="IdMKeyStatus")]
		public EntitySet<Master_StatusDetail> Master_StatusDetails
		{
			get
			{
				return this._Master_StatusDetails;
			}
			set
			{
				this._Master_StatusDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Master_StatusDetails(Master_StatusDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_KeyStatus = this;
		}
		
		private void detach_Master_StatusDetails(Master_StatusDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_KeyStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_LogType")]
	public partial class Master_LogType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeName;
		
		private string _Description;
		
		private EntitySet<EventLog> _EventLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Master_LogType()
		{
			this._EventLogs = new EntitySet<EventLog>(new Action<EventLog>(this.attach_EventLogs), new Action<EventLog>(this.detach_EventLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_LogType_EventLog", Storage="_EventLogs", ThisKey="TypeName", OtherKey="LogType")]
		public EntitySet<EventLog> EventLogs
		{
			get
			{
				return this._EventLogs;
			}
			set
			{
				this._EventLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventLogs(EventLog entity)
		{
			this.SendPropertyChanging();
			entity.Master_LogType = this;
		}
		
		private void detach_EventLogs(EventLog entity)
		{
			this.SendPropertyChanging();
			entity.Master_LogType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_MessageType")]
	public partial class Master_MessageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeName;
		
		private string _Description;
		
		private EntitySet<Inbox_Facebook> _Inbox_Facebooks;
		
		private EntitySet<Sent_Facebook> _Sent_Facebooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Master_MessageType()
		{
			this._Inbox_Facebooks = new EntitySet<Inbox_Facebook>(new Action<Inbox_Facebook>(this.attach_Inbox_Facebooks), new Action<Inbox_Facebook>(this.detach_Inbox_Facebooks));
			this._Sent_Facebooks = new EntitySet<Sent_Facebook>(new Action<Sent_Facebook>(this.attach_Sent_Facebooks), new Action<Sent_Facebook>(this.detach_Sent_Facebooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(500)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_MessageType_Inbox_Facebook", Storage="_Inbox_Facebooks", ThisKey="Id", OtherKey="IdMessageType")]
		public EntitySet<Inbox_Facebook> Inbox_Facebooks
		{
			get
			{
				return this._Inbox_Facebooks;
			}
			set
			{
				this._Inbox_Facebooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_MessageType_Sent_Facebook", Storage="_Sent_Facebooks", ThisKey="Id", OtherKey="IdMessageType")]
		public EntitySet<Sent_Facebook> Sent_Facebooks
		{
			get
			{
				return this._Sent_Facebooks;
			}
			set
			{
				this._Sent_Facebooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inbox_Facebooks(Inbox_Facebook entity)
		{
			this.SendPropertyChanging();
			entity.Master_MessageType = this;
		}
		
		private void detach_Inbox_Facebooks(Inbox_Facebook entity)
		{
			this.SendPropertyChanging();
			entity.Master_MessageType = null;
		}
		
		private void attach_Sent_Facebooks(Sent_Facebook entity)
		{
			this.SendPropertyChanging();
			entity.Master_MessageType = this;
		}
		
		private void detach_Sent_Facebooks(Sent_Facebook entity)
		{
			this.SendPropertyChanging();
			entity.Master_MessageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_ReplyDetail")]
	public partial class Master_ReplyDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdMKeyReply;
		
		private string _Message;
		
		private EntityRef<Master_KeyReply> _Master_KeyReply;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMKeyReplyChanging(System.Nullable<int> value);
    partial void OnIdMKeyReplyChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public Master_ReplyDetail()
		{
			this._Master_KeyReply = default(EntityRef<Master_KeyReply>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMKeyReply", DbType="Int")]
		public System.Nullable<int> IdMKeyReply
		{
			get
			{
				return this._IdMKeyReply;
			}
			set
			{
				if ((this._IdMKeyReply != value))
				{
					if (this._Master_KeyReply.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMKeyReplyChanging(value);
					this.SendPropertyChanging();
					this._IdMKeyReply = value;
					this.SendPropertyChanged("IdMKeyReply");
					this.OnIdMKeyReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_KeyReply_Master_ReplyDetail", Storage="_Master_KeyReply", ThisKey="IdMKeyReply", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Master_KeyReply Master_KeyReply
		{
			get
			{
				return this._Master_KeyReply.Entity;
			}
			set
			{
				Master_KeyReply previousValue = this._Master_KeyReply.Entity;
				if (((previousValue != value) 
							|| (this._Master_KeyReply.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_KeyReply.Entity = null;
						previousValue.Master_ReplyDetails.Remove(this);
					}
					this._Master_KeyReply.Entity = value;
					if ((value != null))
					{
						value.Master_ReplyDetails.Add(this);
						this._IdMKeyReply = value.Id;
					}
					else
					{
						this._IdMKeyReply = default(Nullable<int>);
					}
					this.SendPropertyChanged("Master_KeyReply");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_Scheduler")]
	public partial class Master_Scheduler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Master_SchedulerDetail> _Master_SchedulerDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Master_Scheduler()
		{
			this._Master_SchedulerDetails = new EntitySet<Master_SchedulerDetail>(new Action<Master_SchedulerDetail>(this.attach_Master_SchedulerDetails), new Action<Master_SchedulerDetail>(this.detach_Master_SchedulerDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Scheduler_Master_SchedulerDetail", Storage="_Master_SchedulerDetails", ThisKey="Id", OtherKey="IdMScheduler")]
		public EntitySet<Master_SchedulerDetail> Master_SchedulerDetails
		{
			get
			{
				return this._Master_SchedulerDetails;
			}
			set
			{
				this._Master_SchedulerDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Master_SchedulerDetails(Master_SchedulerDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_Scheduler = this;
		}
		
		private void detach_Master_SchedulerDetails(Master_SchedulerDetail entity)
		{
			this.SendPropertyChanging();
			entity.Master_Scheduler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_SchedulerDetail")]
	public partial class Master_SchedulerDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.TimeSpan> _ExecuteTime;
		
		private System.Nullable<int> _IdMScheduler;
		
		private int _IdFunctionToCall;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<Master_Function> _Master_Function;
		
		private EntityRef<Master_Scheduler> _Master_Scheduler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExecuteTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnExecuteTimeChanged();
    partial void OnIdMSchedulerChanging(System.Nullable<int> value);
    partial void OnIdMSchedulerChanged();
    partial void OnIdFunctionToCallChanging(int value);
    partial void OnIdFunctionToCallChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Master_SchedulerDetail()
		{
			this._Master_Function = default(EntityRef<Master_Function>);
			this._Master_Scheduler = default(EntityRef<Master_Scheduler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecuteTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> ExecuteTime
		{
			get
			{
				return this._ExecuteTime;
			}
			set
			{
				if ((this._ExecuteTime != value))
				{
					this.OnExecuteTimeChanging(value);
					this.SendPropertyChanging();
					this._ExecuteTime = value;
					this.SendPropertyChanged("ExecuteTime");
					this.OnExecuteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMScheduler", DbType="Int")]
		public System.Nullable<int> IdMScheduler
		{
			get
			{
				return this._IdMScheduler;
			}
			set
			{
				if ((this._IdMScheduler != value))
				{
					if (this._Master_Scheduler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMSchedulerChanging(value);
					this.SendPropertyChanging();
					this._IdMScheduler = value;
					this.SendPropertyChanged("IdMScheduler");
					this.OnIdMSchedulerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFunctionToCall", DbType="Int NOT NULL")]
		public int IdFunctionToCall
		{
			get
			{
				return this._IdFunctionToCall;
			}
			set
			{
				if ((this._IdFunctionToCall != value))
				{
					if (this._Master_Function.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFunctionToCallChanging(value);
					this.SendPropertyChanging();
					this._IdFunctionToCall = value;
					this.SendPropertyChanged("IdFunctionToCall");
					this.OnIdFunctionToCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Function_Master_SchedulerDetail", Storage="_Master_Function", ThisKey="IdFunctionToCall", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Master_Function Master_Function
		{
			get
			{
				return this._Master_Function.Entity;
			}
			set
			{
				Master_Function previousValue = this._Master_Function.Entity;
				if (((previousValue != value) 
							|| (this._Master_Function.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_Function.Entity = null;
						previousValue.Master_SchedulerDetails.Remove(this);
					}
					this._Master_Function.Entity = value;
					if ((value != null))
					{
						value.Master_SchedulerDetails.Add(this);
						this._IdFunctionToCall = value.Id;
					}
					else
					{
						this._IdFunctionToCall = default(int);
					}
					this.SendPropertyChanged("Master_Function");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Scheduler_Master_SchedulerDetail", Storage="_Master_Scheduler", ThisKey="IdMScheduler", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Master_Scheduler Master_Scheduler
		{
			get
			{
				return this._Master_Scheduler.Entity;
			}
			set
			{
				Master_Scheduler previousValue = this._Master_Scheduler.Entity;
				if (((previousValue != value) 
							|| (this._Master_Scheduler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_Scheduler.Entity = null;
						previousValue.Master_SchedulerDetails.Remove(this);
					}
					this._Master_Scheduler.Entity = value;
					if ((value != null))
					{
						value.Master_SchedulerDetails.Add(this);
						this._IdMScheduler = value.Id;
					}
					else
					{
						this._IdMScheduler = default(Nullable<int>);
					}
					this.SendPropertyChanged("Master_Scheduler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master_StatusDetail")]
	public partial class Master_StatusDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdMKeyStatus;
		
		private string _Message;
		
		private System.Nullable<bool> _IsPosted;
		
		private EntityRef<Master_KeyStatus> _Master_KeyStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMKeyStatusChanging(System.Nullable<int> value);
    partial void OnIdMKeyStatusChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsPostedChanging(System.Nullable<bool> value);
    partial void OnIsPostedChanged();
    #endregion
		
		public Master_StatusDetail()
		{
			this._Master_KeyStatus = default(EntityRef<Master_KeyStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMKeyStatus", DbType="Int")]
		public System.Nullable<int> IdMKeyStatus
		{
			get
			{
				return this._IdMKeyStatus;
			}
			set
			{
				if ((this._IdMKeyStatus != value))
				{
					if (this._Master_KeyStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMKeyStatusChanging(value);
					this.SendPropertyChanging();
					this._IdMKeyStatus = value;
					this.SendPropertyChanged("IdMKeyStatus");
					this.OnIdMKeyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPosted", DbType="Bit")]
		public System.Nullable<bool> IsPosted
		{
			get
			{
				return this._IsPosted;
			}
			set
			{
				if ((this._IsPosted != value))
				{
					this.OnIsPostedChanging(value);
					this.SendPropertyChanging();
					this._IsPosted = value;
					this.SendPropertyChanged("IsPosted");
					this.OnIsPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_KeyStatus_Master_StatusDetail", Storage="_Master_KeyStatus", ThisKey="IdMKeyStatus", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Master_KeyStatus Master_KeyStatus
		{
			get
			{
				return this._Master_KeyStatus.Entity;
			}
			set
			{
				Master_KeyStatus previousValue = this._Master_KeyStatus.Entity;
				if (((previousValue != value) 
							|| (this._Master_KeyStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_KeyStatus.Entity = null;
						previousValue.Master_StatusDetails.Remove(this);
					}
					this._Master_KeyStatus.Entity = value;
					if ((value != null))
					{
						value.Master_StatusDetails.Add(this);
						this._IdMKeyStatus = value.Id;
					}
					else
					{
						this._IdMKeyStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Master_KeyStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sent_Attachment")]
	public partial class Sent_Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FileName;
		
		private string _FileType;
		
		private System.Data.Linq.Binary _FileSize;
		
		private string _FilePath;
		
		private System.Nullable<int> _IdSent;
		
		private EntityRef<Master_FileType> _Master_FileType;
		
		private EntityRef<Sent> _Sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileTypeChanging(string value);
    partial void OnFileTypeChanged();
    partial void OnFileSizeChanging(System.Data.Linq.Binary value);
    partial void OnFileSizeChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnIdSentChanging(System.Nullable<int> value);
    partial void OnIdSentChanged();
    #endregion
		
		public Sent_Attachment()
		{
			this._Master_FileType = default(EntityRef<Master_FileType>);
			this._Sent = default(EntityRef<Sent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="VarChar(50)")]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					if (this._Master_FileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSent", DbType="Int")]
		public System.Nullable<int> IdSent
		{
			get
			{
				return this._IdSent;
			}
			set
			{
				if ((this._IdSent != value))
				{
					if (this._Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSentChanging(value);
					this.SendPropertyChanging();
					this._IdSent = value;
					this.SendPropertyChanged("IdSent");
					this.OnIdSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_FileType_Sent_Attachment", Storage="_Master_FileType", ThisKey="FileType", OtherKey="Type", IsForeignKey=true, DeleteRule="CASCADE")]
		public Master_FileType Master_FileType
		{
			get
			{
				return this._Master_FileType.Entity;
			}
			set
			{
				Master_FileType previousValue = this._Master_FileType.Entity;
				if (((previousValue != value) 
							|| (this._Master_FileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_FileType.Entity = null;
						previousValue.Sent_Attachments.Remove(this);
					}
					this._Master_FileType.Entity = value;
					if ((value != null))
					{
						value.Sent_Attachments.Add(this);
						this._FileType = value.Type;
					}
					else
					{
						this._FileType = default(string);
					}
					this.SendPropertyChanged("Master_FileType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sent_Sent_Attachment", Storage="_Sent", ThisKey="IdSent", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Sent Sent
		{
			get
			{
				return this._Sent.Entity;
			}
			set
			{
				Sent previousValue = this._Sent.Entity;
				if (((previousValue != value) 
							|| (this._Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sent.Entity = null;
						previousValue.Sent_Attachments.Remove(this);
					}
					this._Sent.Entity = value;
					if ((value != null))
					{
						value.Sent_Attachments.Add(this);
						this._IdSent = value.Id;
					}
					else
					{
						this._IdSent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Inbox_Facebook")]
	public partial class View_Inbox_Facebook
	{
		
		private int _Id;
		
		private string _FromNameFb;
		
		private string _Message;
		
		private string _FromAddressFb;
		
		private System.Nullable<bool> _IsAnalized;
		
		private System.Nullable<int> _IdMessageType;
		
		private string _TypeName;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private string _Subject;
		
		private string _ReplyToName;
		
		private string _ReplyToAddress;
		
		public View_Inbox_Facebook()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNameFb", DbType="VarChar(500)")]
		public string FromNameFb
		{
			get
			{
				return this._FromNameFb;
			}
			set
			{
				if ((this._FromNameFb != value))
				{
					this._FromNameFb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddressFb", DbType="VarChar(500)")]
		public string FromAddressFb
		{
			get
			{
				return this._FromAddressFb;
			}
			set
			{
				if ((this._FromAddressFb != value))
				{
					this._FromAddressFb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnalized", DbType="Bit")]
		public System.Nullable<bool> IsAnalized
		{
			get
			{
				return this._IsAnalized;
			}
			set
			{
				if ((this._IsAnalized != value))
				{
					this._IsAnalized = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMessageType", DbType="Int")]
		public System.Nullable<int> IdMessageType
		{
			get
			{
				return this._IdMessageType;
			}
			set
			{
				if ((this._IdMessageType != value))
				{
					this._IdMessageType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(500)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this._ReceivedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyToName", DbType="VarChar(500)")]
		public string ReplyToName
		{
			get
			{
				return this._ReplyToName;
			}
			set
			{
				if ((this._ReplyToName != value))
				{
					this._ReplyToName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyToAddress", DbType="VarChar(500)")]
		public string ReplyToAddress
		{
			get
			{
				return this._ReplyToAddress;
			}
			set
			{
				if ((this._ReplyToAddress != value))
				{
					this._ReplyToAddress = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Master_KeyReply")]
	public partial class View_Master_KeyReply
	{
		
		private int _Id;
		
		private System.Nullable<int> _IdMKeyReply;
		
		private string _NameMKeyReply;
		
		private string _Message;
		
		public View_Master_KeyReply()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMKeyReply", DbType="Int")]
		public System.Nullable<int> IdMKeyReply
		{
			get
			{
				return this._IdMKeyReply;
			}
			set
			{
				if ((this._IdMKeyReply != value))
				{
					this._IdMKeyReply = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameMKeyReply", DbType="VarChar(500)")]
		public string NameMKeyReply
		{
			get
			{
				return this._NameMKeyReply;
			}
			set
			{
				if ((this._NameMKeyReply != value))
				{
					this._NameMKeyReply = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Master_KeyStatus")]
	public partial class View_Master_KeyStatus
	{
		
		private int _Id;
		
		private System.Nullable<int> _IdMKeyStatus;
		
		private string _NameMKeyStatus;
		
		private string _Message;
		
		private System.Nullable<bool> _IsPosted;
		
		public View_Master_KeyStatus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMKeyStatus", DbType="Int")]
		public System.Nullable<int> IdMKeyStatus
		{
			get
			{
				return this._IdMKeyStatus;
			}
			set
			{
				if ((this._IdMKeyStatus != value))
				{
					this._IdMKeyStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameMKeyStatus", DbType="VarChar(500)")]
		public string NameMKeyStatus
		{
			get
			{
				return this._NameMKeyStatus;
			}
			set
			{
				if ((this._NameMKeyStatus != value))
				{
					this._NameMKeyStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPosted", DbType="Bit")]
		public System.Nullable<bool> IsPosted
		{
			get
			{
				return this._IsPosted;
			}
			set
			{
				if ((this._IsPosted != value))
				{
					this._IsPosted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_ScheduleDetail")]
	public partial class View_ScheduleDetail
	{
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.TimeSpan> _ExecuteTime;
		
		private System.Nullable<int> _IdMScheduler;
		
		private string _MSchedulerName;
		
		private int _IdFunctionToCall;
		
		private string _FunctionToCallName;
		
		private System.Nullable<bool> _IsParameter;
		
		private System.Nullable<bool> _IsMScheduleActive;
		
		private System.Nullable<bool> _IsScheduleDetailActive;
		
		public View_ScheduleDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecuteTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> ExecuteTime
		{
			get
			{
				return this._ExecuteTime;
			}
			set
			{
				if ((this._ExecuteTime != value))
				{
					this._ExecuteTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMScheduler", DbType="Int")]
		public System.Nullable<int> IdMScheduler
		{
			get
			{
				return this._IdMScheduler;
			}
			set
			{
				if ((this._IdMScheduler != value))
				{
					this._IdMScheduler = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSchedulerName", DbType="VarChar(300)")]
		public string MSchedulerName
		{
			get
			{
				return this._MSchedulerName;
			}
			set
			{
				if ((this._MSchedulerName != value))
				{
					this._MSchedulerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFunctionToCall", DbType="Int NOT NULL")]
		public int IdFunctionToCall
		{
			get
			{
				return this._IdFunctionToCall;
			}
			set
			{
				if ((this._IdFunctionToCall != value))
				{
					this._IdFunctionToCall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionToCallName", DbType="VarChar(500)")]
		public string FunctionToCallName
		{
			get
			{
				return this._FunctionToCallName;
			}
			set
			{
				if ((this._FunctionToCallName != value))
				{
					this._FunctionToCallName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParameter", DbType="Bit")]
		public System.Nullable<bool> IsParameter
		{
			get
			{
				return this._IsParameter;
			}
			set
			{
				if ((this._IsParameter != value))
				{
					this._IsParameter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMScheduleActive", DbType="Bit")]
		public System.Nullable<bool> IsMScheduleActive
		{
			get
			{
				return this._IsMScheduleActive;
			}
			set
			{
				if ((this._IsMScheduleActive != value))
				{
					this._IsMScheduleActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScheduleDetailActive", DbType="Bit")]
		public System.Nullable<bool> IsScheduleDetailActive
		{
			get
			{
				return this._IsScheduleDetailActive;
			}
			set
			{
				if ((this._IsScheduleDetailActive != value))
				{
					this._IsScheduleDetailActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_ScheduleDetailWithFuncDescription")]
	public partial class View_ScheduleDetailWithFuncDescription
	{
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.TimeSpan> _ExecuteTime;
		
		private System.Nullable<int> _IdMScheduler;
		
		private string _MSchedulerName;
		
		private int _IdFunctionToCall;
		
		private string _FunctionToCallName;
		
		private string _FunctionDescription;
		
		private System.Nullable<bool> _IsParameter;
		
		private System.Nullable<bool> _IsMScheduleActive;
		
		private System.Nullable<bool> _IsScheduleDetailActive;
		
		public View_ScheduleDetailWithFuncDescription()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecuteTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> ExecuteTime
		{
			get
			{
				return this._ExecuteTime;
			}
			set
			{
				if ((this._ExecuteTime != value))
				{
					this._ExecuteTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMScheduler", DbType="Int")]
		public System.Nullable<int> IdMScheduler
		{
			get
			{
				return this._IdMScheduler;
			}
			set
			{
				if ((this._IdMScheduler != value))
				{
					this._IdMScheduler = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSchedulerName", DbType="VarChar(300)")]
		public string MSchedulerName
		{
			get
			{
				return this._MSchedulerName;
			}
			set
			{
				if ((this._MSchedulerName != value))
				{
					this._MSchedulerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFunctionToCall", DbType="Int NOT NULL")]
		public int IdFunctionToCall
		{
			get
			{
				return this._IdFunctionToCall;
			}
			set
			{
				if ((this._IdFunctionToCall != value))
				{
					this._IdFunctionToCall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionToCallName", DbType="VarChar(500)")]
		public string FunctionToCallName
		{
			get
			{
				return this._FunctionToCallName;
			}
			set
			{
				if ((this._FunctionToCallName != value))
				{
					this._FunctionToCallName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionDescription", DbType="VarChar(500)")]
		public string FunctionDescription
		{
			get
			{
				return this._FunctionDescription;
			}
			set
			{
				if ((this._FunctionDescription != value))
				{
					this._FunctionDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParameter", DbType="Bit")]
		public System.Nullable<bool> IsParameter
		{
			get
			{
				return this._IsParameter;
			}
			set
			{
				if ((this._IsParameter != value))
				{
					this._IsParameter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMScheduleActive", DbType="Bit")]
		public System.Nullable<bool> IsMScheduleActive
		{
			get
			{
				return this._IsMScheduleActive;
			}
			set
			{
				if ((this._IsMScheduleActive != value))
				{
					this._IsMScheduleActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScheduleDetailActive", DbType="Bit")]
		public System.Nullable<bool> IsScheduleDetailActive
		{
			get
			{
				return this._IsScheduleDetailActive;
			}
			set
			{
				if ((this._IsScheduleDetailActive != value))
				{
					this._IsScheduleDetailActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Sent_Facebook")]
	public partial class View_Sent_Facebook
	{
		
		private int _Id;
		
		private System.Nullable<int> _IdMessageType;
		
		private string _TypeName;
		
		private string _Description;
		
		private string _ToNameFb;
		
		private string _ToAddressFb;
		
		private string _ToName;
		
		private string _ToAddress;
		
		private string _Subject;
		
		private string _Message;
		
		private string _BodyTextPlain;
		
		private System.Nullable<bool> _IsAttachment;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		private System.Nullable<bool> _IsScheduled;
		
		private System.Nullable<bool> _IsActive;
		
		public View_Sent_Facebook()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMessageType", DbType="Int")]
		public System.Nullable<int> IdMessageType
		{
			get
			{
				return this._IdMessageType;
			}
			set
			{
				if ((this._IdMessageType != value))
				{
					this._IdMessageType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(500)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToNameFb", DbType="VarChar(500)")]
		public string ToNameFb
		{
			get
			{
				return this._ToNameFb;
			}
			set
			{
				if ((this._ToNameFb != value))
				{
					this._ToNameFb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddressFb", DbType="VarChar(500)")]
		public string ToAddressFb
		{
			get
			{
				return this._ToAddressFb;
			}
			set
			{
				if ((this._ToAddressFb != value))
				{
					this._ToAddressFb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="VarChar(500)")]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this._ToName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="VarChar(500)")]
		public string ToAddress
		{
			get
			{
				return this._ToAddress;
			}
			set
			{
				if ((this._ToAddress != value))
				{
					this._ToAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyTextPlain", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyTextPlain
		{
			get
			{
				return this._BodyTextPlain;
			}
			set
			{
				if ((this._BodyTextPlain != value))
				{
					this._BodyTextPlain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttachment", DbType="Bit")]
		public System.Nullable<bool> IsAttachment
		{
			get
			{
				return this._IsAttachment;
			}
			set
			{
				if ((this._IsAttachment != value))
				{
					this._IsAttachment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this._SentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScheduled", DbType="Bit")]
		public System.Nullable<bool> IsScheduled
		{
			get
			{
				return this._IsScheduled;
			}
			set
			{
				if ((this._IsScheduled != value))
				{
					this._IsScheduled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sent_Facebook")]
	public partial class Sent_Facebook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdMessageType;
		
		private string _Message;
		
		private string _ToNameFb;
		
		private string _ToAddressFb;
		
		private EntityRef<Master_MessageType> _Master_MessageType;
		
		private EntityRef<Sent> _Sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMessageTypeChanging(System.Nullable<int> value);
    partial void OnIdMessageTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnToNameFbChanging(string value);
    partial void OnToNameFbChanged();
    partial void OnToAddressFbChanging(string value);
    partial void OnToAddressFbChanged();
    #endregion
		
		public Sent_Facebook()
		{
			this._Master_MessageType = default(EntityRef<Master_MessageType>);
			this._Sent = default(EntityRef<Sent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMessageType", DbType="Int")]
		public System.Nullable<int> IdMessageType
		{
			get
			{
				return this._IdMessageType;
			}
			set
			{
				if ((this._IdMessageType != value))
				{
					if (this._Master_MessageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._IdMessageType = value;
					this.SendPropertyChanged("IdMessageType");
					this.OnIdMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToNameFb", DbType="VarChar(500)")]
		public string ToNameFb
		{
			get
			{
				return this._ToNameFb;
			}
			set
			{
				if ((this._ToNameFb != value))
				{
					this.OnToNameFbChanging(value);
					this.SendPropertyChanging();
					this._ToNameFb = value;
					this.SendPropertyChanged("ToNameFb");
					this.OnToNameFbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddressFb", DbType="VarChar(500)")]
		public string ToAddressFb
		{
			get
			{
				return this._ToAddressFb;
			}
			set
			{
				if ((this._ToAddressFb != value))
				{
					this.OnToAddressFbChanging(value);
					this.SendPropertyChanging();
					this._ToAddressFb = value;
					this.SendPropertyChanged("ToAddressFb");
					this.OnToAddressFbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_MessageType_Sent_Facebook", Storage="_Master_MessageType", ThisKey="IdMessageType", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Master_MessageType Master_MessageType
		{
			get
			{
				return this._Master_MessageType.Entity;
			}
			set
			{
				Master_MessageType previousValue = this._Master_MessageType.Entity;
				if (((previousValue != value) 
							|| (this._Master_MessageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master_MessageType.Entity = null;
						previousValue.Sent_Facebooks.Remove(this);
					}
					this._Master_MessageType.Entity = value;
					if ((value != null))
					{
						value.Sent_Facebooks.Add(this);
						this._IdMessageType = value.Id;
					}
					else
					{
						this._IdMessageType = default(Nullable<int>);
					}
					this.SendPropertyChanged("Master_MessageType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sent_Sent_Facebook", Storage="_Sent", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Sent Sent
		{
			get
			{
				return this._Sent.Entity;
			}
			set
			{
				Sent previousValue = this._Sent.Entity;
				if (((previousValue != value) 
							|| (this._Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sent.Entity = null;
						previousValue.Sent_Facebook = null;
					}
					this._Sent.Entity = value;
					if ((value != null))
					{
						value.Sent_Facebook = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Sent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sent")]
	public partial class Sent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		private string _FromName;
		
		private string _FromAddress;
		
		private string _CcName;
		
		private string _CcAddress;
		
		private string _ToName;
		
		private string _ToAddress;
		
		private string _Subject;
		
		private string _BodyTextPlain;
		
		private string _BodyHtml;
		
		private string _BodyComposite;
		
		private System.Nullable<bool> _IsAttachment;
		
		private System.Nullable<bool> _IsScheduled;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Sent_Attachment> _Sent_Attachments;
		
		private EntityRef<Sent_Facebook> _Sent_Facebook;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSentDateChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnFromAddressChanging(string value);
    partial void OnFromAddressChanged();
    partial void OnCcNameChanging(string value);
    partial void OnCcNameChanged();
    partial void OnCcAddressChanging(string value);
    partial void OnCcAddressChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    partial void OnToAddressChanging(string value);
    partial void OnToAddressChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyTextPlainChanging(string value);
    partial void OnBodyTextPlainChanged();
    partial void OnBodyHtmlChanging(string value);
    partial void OnBodyHtmlChanged();
    partial void OnBodyCompositeChanging(string value);
    partial void OnBodyCompositeChanged();
    partial void OnIsAttachmentChanging(System.Nullable<bool> value);
    partial void OnIsAttachmentChanged();
    partial void OnIsScheduledChanging(System.Nullable<bool> value);
    partial void OnIsScheduledChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Sent()
		{
			this._Sent_Attachments = new EntitySet<Sent_Attachment>(new Action<Sent_Attachment>(this.attach_Sent_Attachments), new Action<Sent_Attachment>(this.detach_Sent_Attachments));
			this._Sent_Facebook = default(EntityRef<Sent_Facebook>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="VarChar(500)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddress", DbType="VarChar(500)")]
		public string FromAddress
		{
			get
			{
				return this._FromAddress;
			}
			set
			{
				if ((this._FromAddress != value))
				{
					this.OnFromAddressChanging(value);
					this.SendPropertyChanging();
					this._FromAddress = value;
					this.SendPropertyChanged("FromAddress");
					this.OnFromAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CcName", DbType="VarChar(500)")]
		public string CcName
		{
			get
			{
				return this._CcName;
			}
			set
			{
				if ((this._CcName != value))
				{
					this.OnCcNameChanging(value);
					this.SendPropertyChanging();
					this._CcName = value;
					this.SendPropertyChanged("CcName");
					this.OnCcNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CcAddress", DbType="VarChar(500)")]
		public string CcAddress
		{
			get
			{
				return this._CcAddress;
			}
			set
			{
				if ((this._CcAddress != value))
				{
					this.OnCcAddressChanging(value);
					this.SendPropertyChanging();
					this._CcAddress = value;
					this.SendPropertyChanged("CcAddress");
					this.OnCcAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="VarChar(500)")]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this.OnToNameChanging(value);
					this.SendPropertyChanging();
					this._ToName = value;
					this.SendPropertyChanged("ToName");
					this.OnToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="VarChar(500)")]
		public string ToAddress
		{
			get
			{
				return this._ToAddress;
			}
			set
			{
				if ((this._ToAddress != value))
				{
					this.OnToAddressChanging(value);
					this.SendPropertyChanging();
					this._ToAddress = value;
					this.SendPropertyChanged("ToAddress");
					this.OnToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyTextPlain", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyTextPlain
		{
			get
			{
				return this._BodyTextPlain;
			}
			set
			{
				if ((this._BodyTextPlain != value))
				{
					this.OnBodyTextPlainChanging(value);
					this.SendPropertyChanging();
					this._BodyTextPlain = value;
					this.SendPropertyChanged("BodyTextPlain");
					this.OnBodyTextPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyHtml", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyHtml
		{
			get
			{
				return this._BodyHtml;
			}
			set
			{
				if ((this._BodyHtml != value))
				{
					this.OnBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._BodyHtml = value;
					this.SendPropertyChanged("BodyHtml");
					this.OnBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyComposite", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyComposite
		{
			get
			{
				return this._BodyComposite;
			}
			set
			{
				if ((this._BodyComposite != value))
				{
					this.OnBodyCompositeChanging(value);
					this.SendPropertyChanging();
					this._BodyComposite = value;
					this.SendPropertyChanged("BodyComposite");
					this.OnBodyCompositeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttachment", DbType="Bit")]
		public System.Nullable<bool> IsAttachment
		{
			get
			{
				return this._IsAttachment;
			}
			set
			{
				if ((this._IsAttachment != value))
				{
					this.OnIsAttachmentChanging(value);
					this.SendPropertyChanging();
					this._IsAttachment = value;
					this.SendPropertyChanged("IsAttachment");
					this.OnIsAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScheduled", DbType="Bit")]
		public System.Nullable<bool> IsScheduled
		{
			get
			{
				return this._IsScheduled;
			}
			set
			{
				if ((this._IsScheduled != value))
				{
					this.OnIsScheduledChanging(value);
					this.SendPropertyChanging();
					this._IsScheduled = value;
					this.SendPropertyChanged("IsScheduled");
					this.OnIsScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sent_Sent_Attachment", Storage="_Sent_Attachments", ThisKey="Id", OtherKey="IdSent")]
		public EntitySet<Sent_Attachment> Sent_Attachments
		{
			get
			{
				return this._Sent_Attachments;
			}
			set
			{
				this._Sent_Attachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sent_Sent_Facebook", Storage="_Sent_Facebook", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Sent_Facebook Sent_Facebook
		{
			get
			{
				return this._Sent_Facebook.Entity;
			}
			set
			{
				Sent_Facebook previousValue = this._Sent_Facebook.Entity;
				if (((previousValue != value) 
							|| (this._Sent_Facebook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sent_Facebook.Entity = null;
						previousValue.Sent = null;
					}
					this._Sent_Facebook.Entity = value;
					if ((value != null))
					{
						value.Sent = this;
					}
					this.SendPropertyChanged("Sent_Facebook");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sent_Attachments(Sent_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Sent = this;
		}
		
		private void detach_Sent_Attachments(Sent_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Sent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Sent_Attachment")]
	public partial class View_Sent_Attachment
	{
		
		private int _Id;
		
		private string _FileName;
		
		private string _FileType;
		
		private System.Data.Linq.Binary _FileSize;
		
		private string _FilePath;
		
		private System.Nullable<int> _IdSent;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		private string _FromName;
		
		private string _FromAddress;
		
		private string _ToName;
		
		private string _ToAddress;
		
		private string _Subject;
		
		private string _BodyTextPlain;
		
		private System.Nullable<bool> _IsAttachment;
		
		private System.Nullable<bool> _IsScheduled;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _IsActive;
		
		public View_Sent_Attachment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="VarChar(50)")]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this._FileType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this._FileSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSent", DbType="Int")]
		public System.Nullable<int> IdSent
		{
			get
			{
				return this._IdSent;
			}
			set
			{
				if ((this._IdSent != value))
				{
					this._IdSent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this._SentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="VarChar(500)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this._FromName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddress", DbType="VarChar(500)")]
		public string FromAddress
		{
			get
			{
				return this._FromAddress;
			}
			set
			{
				if ((this._FromAddress != value))
				{
					this._FromAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="VarChar(500)")]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this._ToName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="VarChar(500)")]
		public string ToAddress
		{
			get
			{
				return this._ToAddress;
			}
			set
			{
				if ((this._ToAddress != value))
				{
					this._ToAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyTextPlain", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyTextPlain
		{
			get
			{
				return this._BodyTextPlain;
			}
			set
			{
				if ((this._BodyTextPlain != value))
				{
					this._BodyTextPlain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttachment", DbType="Bit")]
		public System.Nullable<bool> IsAttachment
		{
			get
			{
				return this._IsAttachment;
			}
			set
			{
				if ((this._IsAttachment != value))
				{
					this._IsAttachment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScheduled", DbType="Bit")]
		public System.Nullable<bool> IsScheduled
		{
			get
			{
				return this._IsScheduled;
			}
			set
			{
				if ((this._IsScheduled != value))
				{
					this._IsScheduled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
