#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LumenChatterBot2.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LumenChatterBot")]
	public partial class LumenChatterBotDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKeyWordTbl(KeyWordTbl instance);
    partial void UpdateKeyWordTbl(KeyWordTbl instance);
    partial void DeleteKeyWordTbl(KeyWordTbl instance);
    partial void InsertResponseTbl(ResponseTbl instance);
    partial void UpdateResponseTbl(ResponseTbl instance);
    partial void DeleteResponseTbl(ResponseTbl instance);
    #endregion
		
		public LumenChatterBotDBDataContext() : 
				base(global::LumenChatterBot2.Properties.Settings.Default.LumenChatterBotConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LumenChatterBotDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<KeyWordTbl> KeyWordTbls
		{
			get
			{
				return this.GetTable<KeyWordTbl>();
			}
		}
		
		public System.Data.Linq.Table<ResponseTbl> ResponseTbls
		{
			get
			{
				return this.GetTable<ResponseTbl>();
			}
		}
		
		public System.Data.Linq.Table<vw_KeyWordResponse> vw_KeyWordResponses
		{
			get
			{
				return this.GetTable<vw_KeyWordResponse>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeyWordTbl")]
	public partial class KeyWordTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KeyWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeyWordChanging(string value);
    partial void OnKeyWordChanged();
    #endregion
		
		public KeyWordTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWord", DbType="VarChar(300)")]
		public string KeyWord
		{
			get
			{
				return this._KeyWord;
			}
			set
			{
				if ((this._KeyWord != value))
				{
					this.OnKeyWordChanging(value);
					this.SendPropertyChanging();
					this._KeyWord = value;
					this.SendPropertyChanged("KeyWord");
					this.OnKeyWordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResponseTbl")]
	public partial class ResponseTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _KeyWordId;
		
		private string _Response;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeyWordIdChanging(System.Nullable<int> value);
    partial void OnKeyWordIdChanged();
    partial void OnResponseChanging(string value);
    partial void OnResponseChanged();
    #endregion
		
		public ResponseTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWordId", DbType="Int")]
		public System.Nullable<int> KeyWordId
		{
			get
			{
				return this._KeyWordId;
			}
			set
			{
				if ((this._KeyWordId != value))
				{
					this.OnKeyWordIdChanging(value);
					this.SendPropertyChanging();
					this._KeyWordId = value;
					this.SendPropertyChanged("KeyWordId");
					this.OnKeyWordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Response
		{
			get
			{
				return this._Response;
			}
			set
			{
				if ((this._Response != value))
				{
					this.OnResponseChanging(value);
					this.SendPropertyChanging();
					this._Response = value;
					this.SendPropertyChanged("Response");
					this.OnResponseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_KeyWordResponse")]
	public partial class vw_KeyWordResponse
	{
		
		private int _Id;
		
		private int _KeyWordId;
		
		private string _KeyWord;
		
		private string _Response;
		
		public vw_KeyWordResponse()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWordId", DbType="Int NOT NULL")]
		public int KeyWordId
		{
			get
			{
				return this._KeyWordId;
			}
			set
			{
				if ((this._KeyWordId != value))
				{
					this._KeyWordId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWord", DbType="VarChar(300)")]
		public string KeyWord
		{
			get
			{
				return this._KeyWord;
			}
			set
			{
				if ((this._KeyWord != value))
				{
					this._KeyWord = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Response
		{
			get
			{
				return this._Response;
			}
			set
			{
				if ((this._Response != value))
				{
					this._Response = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
